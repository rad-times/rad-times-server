type Query {
    personById(id: Int): Person
    activePersonBySubject(id: String): Person
    searchPersonsByName(nameToMatch: String): [Person]
    spotById(id: Int): SpotInstance
    spotByName(nameToMatch: String, activeUserId: Int): [SpotInstance]
    spotByFavoriteOnly: [SpotInstance]
    spotByPrivateOnly(activeUserId: Int): [SpotInstance]
    spotByLatLng(lat: Float, lng: Float, distance: Int, activeUserId: Int): [SpotInstance]
    crewByPersonId(id: Int): [Person]
}

type Mutation {
    toggleSpotFavorite(spotId: Int, activeUserId:ID, isFavorite: Boolean): SpotInstance
    createSpot: SpotInstance
    togglePersonFavorite(personId: Int, activeUserId: ID, isFavorite: Boolean): Person
}

type Person {
    id: Int!
    first_name: String
    last_name: String
    bio: String
    profile_image: String
    is_favorite: Boolean
    language_code: String
    socials: [SocialMedia]
    location: PersonLocation
    crew: [Person]
}

type PersonLocation {
    id: Int!
    lat: Float
    lng: Float
    city_id: String
    city_name: String
    state_name: String
    country_name: String
}

type SpotLocation {
    location_id: Int!
    lat: Float
    lng: Float
    street_number: String
    street_name: String
    city_name: String
    state_name: String
    country_name: String
    postal_code: String
}

type SpotInstance {
    spot_id: Int!
    spot_name: String!
    spot_image: String
    spot_description: String
    last_check_in: String
    is_public: Boolean
    is_private: Boolean
    is_favorite: Boolean
    location: SpotLocation
    keywords: [SpotKeyword]!
}

type SpotKeyword {
    keyword_id: Int!
    keyword_name: String!
    description: String
}

type SocialMedia {
    id: Int!
    social_type: String!
    url_link: String!
}
